// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: d9PrY1SRs2wAiwFXTkwPXt
// Component: 2TEYdWIpIJLV

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { ModeValue, useMode } from "../core/PlasmicGlobalVariant__Mode"; // plasmic-import: yBTVTgAz2Co9/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_core_css from "../core/plasmic.module.css"; // plasmic-import: 3BHMWCYAenCmWb8ThbnzeF/projectcss
import plasmic_semantic_css from "../semantic/plasmic.module.css"; // plasmic-import: dNqcW7FYVqnkjtbdVGjyS8/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: d9PrY1SRs2wAiwFXTkwPXt/projectcss
import sty from "./PlasmicContainer.module.css"; // plasmic-import: 2TEYdWIpIJLV/css

createPlasmicElementProxy;

export type PlasmicContainer__VariantMembers = {
  includeIcon: "includeIcon";
  includeImage: "includeImage";
  backgroundColor:
    | "mainBold"
    | "mainDefault"
    | "mainDisabled"
    | "mainEmphasis"
    | "mainMuted"
    | "mainSubtle"
    | "ancillaryBold"
    | "ancillaryDefault"
    | "ancillaryDisabled"
    | "ancillaryEmphasis"
    | "ancillaryMuted"
    | "ancillarySubtle"
    | "accentBold"
    | "accentDefault"
    | "accentDisabled"
    | "accentEmphasis"
    | "accentMuted"
    | "accentSubtle"
    | "standardBold"
    | "standardDefault"
    | "standardDisabled"
    | "standardEmphasis"
    | "standardMuted"
    | "standardSubtle";
  backgroundChanges:
    | "bright"
    | "brighter"
    | "brightest"
    | "contrast"
    | "contraster"
    | "contrastest";
  layer01: "backgroundUniversal" | "backgroundSubtle" | "backgroundBold";
  layer02: "backgroundUniversal" | "backgroundSubtle" | "backgroundBold";
  layer03: "backgroundUniversal" | "backgroundSubtle" | "backgroundBold";
  borderColor:
    | "mainBold"
    | "mainDefault"
    | "mainDisabled"
    | "mainEmphasis"
    | "mainMuted"
    | "mainSubtle"
    | "ancillaryBold"
    | "ancillaryDefault"
    | "ancillaryDisabled"
    | "ancillaryEmphasis"
    | "ancillaryMuted"
    | "ancillarySubtle"
    | "accentBold"
    | "accentDefault"
    | "accentDisabled"
    | "accentEmphasis"
    | "accentMuted"
    | "accentSubtle"
    | "standardBold"
    | "standardDefault"
    | "standardDisabled"
    | "standardEmphasis"
    | "standardMuted"
    | "standardSubtle";
  borderStyle:
    | "_1Px"
    | "_2Px"
    | "_3Px"
    | "_4Px"
    | "topOnly"
    | "bottomOnly"
    | "rightOnly"
    | "leftOnly"
    | "dashed"
    | "dotted";
  radius: "small" | "medium" | "large" | "extraLarge" | "none";
  shadow: "xs" | "sm" | "md" | "lg" | "xl" | "xxl";
  containerPadding:
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl";
  overlayPadding:
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl";
  contentPadding:
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl";
  containerLayout:
    | "widthStretch"
    | "widthHug"
    | "widthStretchStandard"
    | "widthStretchFull"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCentered"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBaseline"
    | "flipLayout";
  overlayLayout:
    | "widthStretch"
    | "widthHug"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCenter"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBaseline"
    | "flipLayout";
  contentLayout:
    | "widthStretch"
    | "widthHug"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCenter"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBase"
    | "flipLayout";
  contentGap: "xs" | "sm" | "md" | "lg" | "xl" | "_2Xl" | "_3Xl" | "_4Xl";
};
export type PlasmicContainer__VariantsArgs = {
  includeIcon?: SingleBooleanChoiceArg<"includeIcon">;
  includeImage?: SingleBooleanChoiceArg<"includeImage">;
  backgroundColor?: SingleChoiceArg<
    | "mainBold"
    | "mainDefault"
    | "mainDisabled"
    | "mainEmphasis"
    | "mainMuted"
    | "mainSubtle"
    | "ancillaryBold"
    | "ancillaryDefault"
    | "ancillaryDisabled"
    | "ancillaryEmphasis"
    | "ancillaryMuted"
    | "ancillarySubtle"
    | "accentBold"
    | "accentDefault"
    | "accentDisabled"
    | "accentEmphasis"
    | "accentMuted"
    | "accentSubtle"
    | "standardBold"
    | "standardDefault"
    | "standardDisabled"
    | "standardEmphasis"
    | "standardMuted"
    | "standardSubtle"
  >;
  backgroundChanges?: SingleChoiceArg<
    | "bright"
    | "brighter"
    | "brightest"
    | "contrast"
    | "contraster"
    | "contrastest"
  >;
  layer01?: MultiChoiceArg<
    "backgroundUniversal" | "backgroundSubtle" | "backgroundBold"
  >;
  layer02?: MultiChoiceArg<
    "backgroundUniversal" | "backgroundSubtle" | "backgroundBold"
  >;
  layer03?: MultiChoiceArg<
    "backgroundUniversal" | "backgroundSubtle" | "backgroundBold"
  >;
  borderColor?: SingleChoiceArg<
    | "mainBold"
    | "mainDefault"
    | "mainDisabled"
    | "mainEmphasis"
    | "mainMuted"
    | "mainSubtle"
    | "ancillaryBold"
    | "ancillaryDefault"
    | "ancillaryDisabled"
    | "ancillaryEmphasis"
    | "ancillaryMuted"
    | "ancillarySubtle"
    | "accentBold"
    | "accentDefault"
    | "accentDisabled"
    | "accentEmphasis"
    | "accentMuted"
    | "accentSubtle"
    | "standardBold"
    | "standardDefault"
    | "standardDisabled"
    | "standardEmphasis"
    | "standardMuted"
    | "standardSubtle"
  >;
  borderStyle?: MultiChoiceArg<
    | "_1Px"
    | "_2Px"
    | "_3Px"
    | "_4Px"
    | "topOnly"
    | "bottomOnly"
    | "rightOnly"
    | "leftOnly"
    | "dashed"
    | "dotted"
  >;
  radius?: SingleChoiceArg<
    "small" | "medium" | "large" | "extraLarge" | "none"
  >;
  shadow?: SingleChoiceArg<"xs" | "sm" | "md" | "lg" | "xl" | "xxl">;
  containerPadding?: SingleChoiceArg<
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl"
  >;
  overlayPadding?: MultiChoiceArg<
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl"
  >;
  contentPadding?: MultiChoiceArg<
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl"
  >;
  containerLayout?: MultiChoiceArg<
    | "widthStretch"
    | "widthHug"
    | "widthStretchStandard"
    | "widthStretchFull"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCentered"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBaseline"
    | "flipLayout"
  >;
  overlayLayout?: MultiChoiceArg<
    | "widthStretch"
    | "widthHug"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCenter"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBaseline"
    | "flipLayout"
  >;
  contentLayout?: MultiChoiceArg<
    | "widthStretch"
    | "widthHug"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCenter"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBase"
    | "flipLayout"
  >;
  contentGap?: SingleChoiceArg<
    "xs" | "sm" | "md" | "lg" | "xl" | "_2Xl" | "_3Xl" | "_4Xl"
  >;
};
type VariantPropType = keyof PlasmicContainer__VariantsArgs;
export const PlasmicContainer__VariantProps = new Array<VariantPropType>(
  "includeIcon",
  "includeImage",
  "backgroundColor",
  "backgroundChanges",
  "layer01",
  "layer02",
  "layer03",
  "borderColor",
  "borderStyle",
  "radius",
  "shadow",
  "containerPadding",
  "overlayPadding",
  "contentPadding",
  "containerLayout",
  "overlayLayout",
  "contentLayout",
  "contentGap"
);

export type PlasmicContainer__ArgsType = {
  containerSlot?: React.ReactNode;
  imageUrl?: string;
  imageWidth?: string;
  imageHeight?: string;
  iconUrl?: string;
};
type ArgPropType = keyof PlasmicContainer__ArgsType;
export const PlasmicContainer__ArgProps = new Array<ArgPropType>(
  "containerSlot",
  "imageUrl",
  "imageWidth",
  "imageHeight",
  "iconUrl"
);

export type PlasmicContainer__OverridesType = {
  container?: Flex__<"div">;
  overlay?: Flex__<"div">;
  content?: Flex__<"div">;
  image?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  icon?: Flex__<"div">;
  svg?: Flex__<"svg">;
};

export interface DefaultContainerProps {
  containerSlot?: React.ReactNode;
  imageUrl?: string;
  imageWidth?: string;
  imageHeight?: string;
  iconUrl?: string;
  includeIcon?: SingleBooleanChoiceArg<"includeIcon">;
  includeImage?: SingleBooleanChoiceArg<"includeImage">;
  backgroundColor?: SingleChoiceArg<
    | "mainBold"
    | "mainDefault"
    | "mainDisabled"
    | "mainEmphasis"
    | "mainMuted"
    | "mainSubtle"
    | "ancillaryBold"
    | "ancillaryDefault"
    | "ancillaryDisabled"
    | "ancillaryEmphasis"
    | "ancillaryMuted"
    | "ancillarySubtle"
    | "accentBold"
    | "accentDefault"
    | "accentDisabled"
    | "accentEmphasis"
    | "accentMuted"
    | "accentSubtle"
    | "standardBold"
    | "standardDefault"
    | "standardDisabled"
    | "standardEmphasis"
    | "standardMuted"
    | "standardSubtle"
  >;
  backgroundChanges?: SingleChoiceArg<
    | "bright"
    | "brighter"
    | "brightest"
    | "contrast"
    | "contraster"
    | "contrastest"
  >;
  layer01?: MultiChoiceArg<
    "backgroundUniversal" | "backgroundSubtle" | "backgroundBold"
  >;
  layer02?: MultiChoiceArg<
    "backgroundUniversal" | "backgroundSubtle" | "backgroundBold"
  >;
  layer03?: MultiChoiceArg<
    "backgroundUniversal" | "backgroundSubtle" | "backgroundBold"
  >;
  borderColor?: SingleChoiceArg<
    | "mainBold"
    | "mainDefault"
    | "mainDisabled"
    | "mainEmphasis"
    | "mainMuted"
    | "mainSubtle"
    | "ancillaryBold"
    | "ancillaryDefault"
    | "ancillaryDisabled"
    | "ancillaryEmphasis"
    | "ancillaryMuted"
    | "ancillarySubtle"
    | "accentBold"
    | "accentDefault"
    | "accentDisabled"
    | "accentEmphasis"
    | "accentMuted"
    | "accentSubtle"
    | "standardBold"
    | "standardDefault"
    | "standardDisabled"
    | "standardEmphasis"
    | "standardMuted"
    | "standardSubtle"
  >;
  borderStyle?: MultiChoiceArg<
    | "_1Px"
    | "_2Px"
    | "_3Px"
    | "_4Px"
    | "topOnly"
    | "bottomOnly"
    | "rightOnly"
    | "leftOnly"
    | "dashed"
    | "dotted"
  >;
  radius?: SingleChoiceArg<
    "small" | "medium" | "large" | "extraLarge" | "none"
  >;
  shadow?: SingleChoiceArg<"xs" | "sm" | "md" | "lg" | "xl" | "xxl">;
  containerPadding?: SingleChoiceArg<
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl"
  >;
  overlayPadding?: MultiChoiceArg<
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl"
  >;
  contentPadding?: MultiChoiceArg<
    | "all3Xs"
    | "all2Xs"
    | "allXs"
    | "allSm"
    | "allMd"
    | "allLg"
    | "allXl"
    | "all2Xl"
    | "all3Xl"
    | "all4Xl"
    | "top3Xs"
    | "top2Xs"
    | "topXs"
    | "topSm"
    | "topMd"
    | "topLg"
    | "topXl"
    | "top2Xl"
    | "top3Xl"
    | "top4Xl"
    | "bottom3Xs"
    | "bottom2Xs"
    | "bottomXs"
    | "bottomSm"
    | "bottomMd"
    | "bottomLg"
    | "bottomXl"
    | "bottom2Xl"
    | "bottom3Xl"
    | "bottom4Xl"
    | "left3Xs"
    | "left2Xs"
    | "leftXs"
    | "leftSm"
    | "leftMd"
    | "leftLg"
    | "leftXl"
    | "left2Xl"
    | "left3Xl"
    | "left4Xl"
    | "right3Xs"
    | "right2Xs"
    | "rightXs"
    | "rightSm"
    | "rightMd"
    | "rightLg"
    | "rightXl"
    | "right2Xl"
    | "right3Xl"
    | "right4Xl"
  >;
  containerLayout?: MultiChoiceArg<
    | "widthStretch"
    | "widthHug"
    | "widthStretchStandard"
    | "widthStretchFull"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCentered"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBaseline"
    | "flipLayout"
  >;
  overlayLayout?: MultiChoiceArg<
    | "widthStretch"
    | "widthHug"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCenter"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBaseline"
    | "flipLayout"
  >;
  contentLayout?: MultiChoiceArg<
    | "widthStretch"
    | "widthHug"
    | "heightHug"
    | "heightStretch"
    | "verticalTop"
    | "verticalCenter"
    | "verticalBottom"
    | "verticalBetween"
    | "verticalEvenly"
    | "verticalAround"
    | "horizontalLeft"
    | "horizontalCenter"
    | "horizontalRight"
    | "horizontalStretch"
    | "horizontalBase"
    | "flipLayout"
  >;
  contentGap?: SingleChoiceArg<
    "xs" | "sm" | "md" | "lg" | "xl" | "_2Xl" | "_3Xl" | "_4Xl"
  >;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContainer__RenderFunc(props: {
  variants: PlasmicContainer__VariantsArgs;
  args: PlasmicContainer__ArgsType;
  overrides: PlasmicContainer__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "backgroundColor",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.backgroundColor
      },
      {
        path: "backgroundChanges",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          $props.backgroundChanges
      },
      {
        path: "radius",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.radius
      },
      {
        path: "shadow",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.shadow
      },
      {
        path: "containerPadding",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          $props.containerPadding
      },
      {
        path: "layer01",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.layer01
      },
      {
        path: "layer02",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.layer02
      },
      {
        path: "layer03",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.layer03
      },
      {
        path: "borderColor",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.borderColor
      },
      {
        path: "borderStyle",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.borderStyle
      },
      {
        path: "overlayPadding",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.overlayPadding
      },
      {
        path: "contentPadding",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.contentPadding
      },
      {
        path: "includeImage",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.includeImage
      },
      {
        path: "includeIcon",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.includeIcon
      },
      {
        path: "contentGap",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.contentGap
      },
      {
        path: "containerLayout",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.containerLayout
      },
      {
        path: "overlayLayout",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.overlayLayout
      },
      {
        path: "contentLayout",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.contentLayout
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    mode: useMode()
  });

  return (
    <div
      data-plasmic-name={"container"}
      data-plasmic-override={overrides.container}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_core_css.plasmic_tokens,
        plasmic_semantic_css.plasmic_tokens,
        sty.container,
        {
          [plasmic_core_css.global_mode_darkGrayscale]: hasVariant(
            globalVariants,
            "mode",
            "darkGrayscale"
          ),
          [plasmic_core_css.global_mode_dark]: hasVariant(
            globalVariants,
            "mode",
            "dark"
          ),
          [plasmic_core_css.global_mode_grayscale]: hasVariant(
            globalVariants,
            "mode",
            "grayscale"
          ),
          [sty.containerbackgroundChanges_bright]: hasVariant(
            $state,
            "backgroundChanges",
            "bright"
          ),
          [sty.containerbackgroundChanges_brighter]: hasVariant(
            $state,
            "backgroundChanges",
            "brighter"
          ),
          [sty.containerbackgroundChanges_brightest]: hasVariant(
            $state,
            "backgroundChanges",
            "brightest"
          ),
          [sty.containerbackgroundChanges_contrast]: hasVariant(
            $state,
            "backgroundChanges",
            "contrast"
          ),
          [sty.containerbackgroundChanges_contraster]: hasVariant(
            $state,
            "backgroundChanges",
            "contraster"
          ),
          [sty.containerbackgroundChanges_contrastest]: hasVariant(
            $state,
            "backgroundChanges",
            "contrastest"
          ),
          [sty.containerbackgroundColor_accentBold]: hasVariant(
            $state,
            "backgroundColor",
            "accentBold"
          ),
          [sty.containerbackgroundColor_accentDefault]: hasVariant(
            $state,
            "backgroundColor",
            "accentDefault"
          ),
          [sty.containerbackgroundColor_accentDisabled]: hasVariant(
            $state,
            "backgroundColor",
            "accentDisabled"
          ),
          [sty.containerbackgroundColor_accentEmphasis]: hasVariant(
            $state,
            "backgroundColor",
            "accentEmphasis"
          ),
          [sty.containerbackgroundColor_accentMuted]: hasVariant(
            $state,
            "backgroundColor",
            "accentMuted"
          ),
          [sty.containerbackgroundColor_accentSubtle]: hasVariant(
            $state,
            "backgroundColor",
            "accentSubtle"
          ),
          [sty.containerbackgroundColor_ancillaryBold]: hasVariant(
            $state,
            "backgroundColor",
            "ancillaryBold"
          ),
          [sty.containerbackgroundColor_ancillaryDefault]: hasVariant(
            $state,
            "backgroundColor",
            "ancillaryDefault"
          ),
          [sty.containerbackgroundColor_ancillaryDisabled]: hasVariant(
            $state,
            "backgroundColor",
            "ancillaryDisabled"
          ),
          [sty.containerbackgroundColor_ancillaryEmphasis]: hasVariant(
            $state,
            "backgroundColor",
            "ancillaryEmphasis"
          ),
          [sty.containerbackgroundColor_ancillaryMuted]: hasVariant(
            $state,
            "backgroundColor",
            "ancillaryMuted"
          ),
          [sty.containerbackgroundColor_ancillarySubtle]: hasVariant(
            $state,
            "backgroundColor",
            "ancillarySubtle"
          ),
          [sty.containerbackgroundColor_mainBold]: hasVariant(
            $state,
            "backgroundColor",
            "mainBold"
          ),
          [sty.containerbackgroundColor_mainDefault]: hasVariant(
            $state,
            "backgroundColor",
            "mainDefault"
          ),
          [sty.containerbackgroundColor_mainDisabled]: hasVariant(
            $state,
            "backgroundColor",
            "mainDisabled"
          ),
          [sty.containerbackgroundColor_mainEmphasis]: hasVariant(
            $state,
            "backgroundColor",
            "mainEmphasis"
          ),
          [sty.containerbackgroundColor_mainMuted]: hasVariant(
            $state,
            "backgroundColor",
            "mainMuted"
          ),
          [sty.containerbackgroundColor_mainSubtle]: hasVariant(
            $state,
            "backgroundColor",
            "mainSubtle"
          ),
          [sty.containerbackgroundColor_standardBold]: hasVariant(
            $state,
            "backgroundColor",
            "standardBold"
          ),
          [sty.containerbackgroundColor_standardDefault]: hasVariant(
            $state,
            "backgroundColor",
            "standardDefault"
          ),
          [sty.containerbackgroundColor_standardDisabled]: hasVariant(
            $state,
            "backgroundColor",
            "standardDisabled"
          ),
          [sty.containerbackgroundColor_standardEmphasis]: hasVariant(
            $state,
            "backgroundColor",
            "standardEmphasis"
          ),
          [sty.containerbackgroundColor_standardMuted]: hasVariant(
            $state,
            "backgroundColor",
            "standardMuted"
          ),
          [sty.containerbackgroundColor_standardSubtle]: hasVariant(
            $state,
            "backgroundColor",
            "standardSubtle"
          ),
          [sty.containerborderColor_accentBold]: hasVariant(
            $state,
            "borderColor",
            "accentBold"
          ),
          [sty.containerborderColor_accentDefault]: hasVariant(
            $state,
            "borderColor",
            "accentDefault"
          ),
          [sty.containerborderColor_accentDisabled]: hasVariant(
            $state,
            "borderColor",
            "accentDisabled"
          ),
          [sty.containerborderColor_accentEmphasis]: hasVariant(
            $state,
            "borderColor",
            "accentEmphasis"
          ),
          [sty.containerborderColor_accentMuted]: hasVariant(
            $state,
            "borderColor",
            "accentMuted"
          ),
          [sty.containerborderColor_accentSubtle]: hasVariant(
            $state,
            "borderColor",
            "accentSubtle"
          ),
          [sty.containerborderColor_ancillaryBold]: hasVariant(
            $state,
            "borderColor",
            "ancillaryBold"
          ),
          [sty.containerborderColor_ancillaryDefault]: hasVariant(
            $state,
            "borderColor",
            "ancillaryDefault"
          ),
          [sty.containerborderColor_ancillaryDisabled]: hasVariant(
            $state,
            "borderColor",
            "ancillaryDisabled"
          ),
          [sty.containerborderColor_ancillaryEmphasis]: hasVariant(
            $state,
            "borderColor",
            "ancillaryEmphasis"
          ),
          [sty.containerborderColor_ancillaryMuted]: hasVariant(
            $state,
            "borderColor",
            "ancillaryMuted"
          ),
          [sty.containerborderColor_ancillarySubtle]: hasVariant(
            $state,
            "borderColor",
            "ancillarySubtle"
          ),
          [sty.containerborderColor_mainBold]: hasVariant(
            $state,
            "borderColor",
            "mainBold"
          ),
          [sty.containerborderColor_mainDefault]: hasVariant(
            $state,
            "borderColor",
            "mainDefault"
          ),
          [sty.containerborderColor_mainDisabled]: hasVariant(
            $state,
            "borderColor",
            "mainDisabled"
          ),
          [sty.containerborderColor_mainEmphasis]: hasVariant(
            $state,
            "borderColor",
            "mainEmphasis"
          ),
          [sty.containerborderColor_mainMuted]: hasVariant(
            $state,
            "borderColor",
            "mainMuted"
          ),
          [sty.containerborderColor_mainSubtle]: hasVariant(
            $state,
            "borderColor",
            "mainSubtle"
          ),
          [sty.containerborderColor_standardBold]: hasVariant(
            $state,
            "borderColor",
            "standardBold"
          ),
          [sty.containerborderColor_standardDefault]: hasVariant(
            $state,
            "borderColor",
            "standardDefault"
          ),
          [sty.containerborderColor_standardDisabled]: hasVariant(
            $state,
            "borderColor",
            "standardDisabled"
          ),
          [sty.containerborderColor_standardEmphasis]: hasVariant(
            $state,
            "borderColor",
            "standardEmphasis"
          ),
          [sty.containerborderColor_standardMuted]: hasVariant(
            $state,
            "borderColor",
            "standardMuted"
          ),
          [sty.containerborderColor_standardSubtle]: hasVariant(
            $state,
            "borderColor",
            "standardSubtle"
          ),
          [sty.containerborderStyle__1Px]: hasVariant(
            $state,
            "borderStyle",
            "_1Px"
          ),
          [sty.containerborderStyle__2Px]: hasVariant(
            $state,
            "borderStyle",
            "_2Px"
          ),
          [sty.containerborderStyle__3Px]: hasVariant(
            $state,
            "borderStyle",
            "_3Px"
          ),
          [sty.containerborderStyle__4Px]: hasVariant(
            $state,
            "borderStyle",
            "_4Px"
          ),
          [sty.containerborderStyle_bottomOnly]: hasVariant(
            $state,
            "borderStyle",
            "bottomOnly"
          ),
          [sty.containerborderStyle_dashed]: hasVariant(
            $state,
            "borderStyle",
            "dashed"
          ),
          [sty.containerborderStyle_dotted]: hasVariant(
            $state,
            "borderStyle",
            "dotted"
          ),
          [sty.containerborderStyle_leftOnly]: hasVariant(
            $state,
            "borderStyle",
            "leftOnly"
          ),
          [sty.containerborderStyle_rightOnly]: hasVariant(
            $state,
            "borderStyle",
            "rightOnly"
          ),
          [sty.containerborderStyle_topOnly]: hasVariant(
            $state,
            "borderStyle",
            "topOnly"
          ),
          [sty.containercontainerLayout_flipLayout]: hasVariant(
            $state,
            "containerLayout",
            "flipLayout"
          ),
          [sty.containercontainerLayout_heightHug]: hasVariant(
            $state,
            "containerLayout",
            "heightHug"
          ),
          [sty.containercontainerLayout_heightStretch]: hasVariant(
            $state,
            "containerLayout",
            "heightStretch"
          ),
          [sty.containercontainerLayout_horizontalBaseline]: hasVariant(
            $state,
            "containerLayout",
            "horizontalBaseline"
          ),
          [sty.containercontainerLayout_horizontalCentered]: hasVariant(
            $state,
            "containerLayout",
            "horizontalCentered"
          ),
          [sty.containercontainerLayout_horizontalLeft]: hasVariant(
            $state,
            "containerLayout",
            "horizontalLeft"
          ),
          [sty.containercontainerLayout_horizontalRight]: hasVariant(
            $state,
            "containerLayout",
            "horizontalRight"
          ),
          [sty.containercontainerLayout_horizontalStretch]: hasVariant(
            $state,
            "containerLayout",
            "horizontalStretch"
          ),
          [sty.containercontainerLayout_verticalAround]: hasVariant(
            $state,
            "containerLayout",
            "verticalAround"
          ),
          [sty.containercontainerLayout_verticalBetween]: hasVariant(
            $state,
            "containerLayout",
            "verticalBetween"
          ),
          [sty.containercontainerLayout_verticalBottom]: hasVariant(
            $state,
            "containerLayout",
            "verticalBottom"
          ),
          [sty.containercontainerLayout_verticalCenter]: hasVariant(
            $state,
            "containerLayout",
            "verticalCenter"
          ),
          [sty.containercontainerLayout_verticalEvenly]: hasVariant(
            $state,
            "containerLayout",
            "verticalEvenly"
          ),
          [sty.containercontainerLayout_verticalTop]: hasVariant(
            $state,
            "containerLayout",
            "verticalTop"
          ),
          [sty.containercontainerLayout_widthHug]: hasVariant(
            $state,
            "containerLayout",
            "widthHug"
          ),
          [sty.containercontainerLayout_widthStretchFull]: hasVariant(
            $state,
            "containerLayout",
            "widthStretchFull"
          ),
          [sty.containercontainerLayout_widthStretchStandard]: hasVariant(
            $state,
            "containerLayout",
            "widthStretchStandard"
          ),
          [sty.containercontainerLayout_widthStretch]: hasVariant(
            $state,
            "containerLayout",
            "widthStretch"
          ),
          [sty.containercontainerPadding_all2Xl]: hasVariant(
            $state,
            "containerPadding",
            "all2Xl"
          ),
          [sty.containercontainerPadding_all2Xs]: hasVariant(
            $state,
            "containerPadding",
            "all2Xs"
          ),
          [sty.containercontainerPadding_all3Xl]: hasVariant(
            $state,
            "containerPadding",
            "all3Xl"
          ),
          [sty.containercontainerPadding_all3Xs]: hasVariant(
            $state,
            "containerPadding",
            "all3Xs"
          ),
          [sty.containercontainerPadding_all4Xl]: hasVariant(
            $state,
            "containerPadding",
            "all4Xl"
          ),
          [sty.containercontainerPadding_allLg]: hasVariant(
            $state,
            "containerPadding",
            "allLg"
          ),
          [sty.containercontainerPadding_allMd]: hasVariant(
            $state,
            "containerPadding",
            "allMd"
          ),
          [sty.containercontainerPadding_allSm]: hasVariant(
            $state,
            "containerPadding",
            "allSm"
          ),
          [sty.containercontainerPadding_allXl]: hasVariant(
            $state,
            "containerPadding",
            "allXl"
          ),
          [sty.containercontainerPadding_allXs]: hasVariant(
            $state,
            "containerPadding",
            "allXs"
          ),
          [sty.containercontainerPadding_bottom2Xl]: hasVariant(
            $state,
            "containerPadding",
            "bottom2Xl"
          ),
          [sty.containercontainerPadding_bottom2Xs]: hasVariant(
            $state,
            "containerPadding",
            "bottom2Xs"
          ),
          [sty.containercontainerPadding_bottom3Xl]: hasVariant(
            $state,
            "containerPadding",
            "bottom3Xl"
          ),
          [sty.containercontainerPadding_bottom3Xs]: hasVariant(
            $state,
            "containerPadding",
            "bottom3Xs"
          ),
          [sty.containercontainerPadding_bottom4Xl]: hasVariant(
            $state,
            "containerPadding",
            "bottom4Xl"
          ),
          [sty.containercontainerPadding_bottomLg]: hasVariant(
            $state,
            "containerPadding",
            "bottomLg"
          ),
          [sty.containercontainerPadding_bottomMd]: hasVariant(
            $state,
            "containerPadding",
            "bottomMd"
          ),
          [sty.containercontainerPadding_bottomSm]: hasVariant(
            $state,
            "containerPadding",
            "bottomSm"
          ),
          [sty.containercontainerPadding_bottomXl]: hasVariant(
            $state,
            "containerPadding",
            "bottomXl"
          ),
          [sty.containercontainerPadding_bottomXs]: hasVariant(
            $state,
            "containerPadding",
            "bottomXs"
          ),
          [sty.containercontainerPadding_left2Xl]: hasVariant(
            $state,
            "containerPadding",
            "left2Xl"
          ),
          [sty.containercontainerPadding_left2Xs]: hasVariant(
            $state,
            "containerPadding",
            "left2Xs"
          ),
          [sty.containercontainerPadding_left3Xl]: hasVariant(
            $state,
            "containerPadding",
            "left3Xl"
          ),
          [sty.containercontainerPadding_left3Xs]: hasVariant(
            $state,
            "containerPadding",
            "left3Xs"
          ),
          [sty.containercontainerPadding_left4Xl]: hasVariant(
            $state,
            "containerPadding",
            "left4Xl"
          ),
          [sty.containercontainerPadding_leftLg]: hasVariant(
            $state,
            "containerPadding",
            "leftLg"
          ),
          [sty.containercontainerPadding_leftMd]: hasVariant(
            $state,
            "containerPadding",
            "leftMd"
          ),
          [sty.containercontainerPadding_leftSm]: hasVariant(
            $state,
            "containerPadding",
            "leftSm"
          ),
          [sty.containercontainerPadding_leftXl]: hasVariant(
            $state,
            "containerPadding",
            "leftXl"
          ),
          [sty.containercontainerPadding_leftXs]: hasVariant(
            $state,
            "containerPadding",
            "leftXs"
          ),
          [sty.containercontainerPadding_right2Xl]: hasVariant(
            $state,
            "containerPadding",
            "right2Xl"
          ),
          [sty.containercontainerPadding_right2Xs]: hasVariant(
            $state,
            "containerPadding",
            "right2Xs"
          ),
          [sty.containercontainerPadding_right3Xl]: hasVariant(
            $state,
            "containerPadding",
            "right3Xl"
          ),
          [sty.containercontainerPadding_right3Xs]: hasVariant(
            $state,
            "containerPadding",
            "right3Xs"
          ),
          [sty.containercontainerPadding_right4Xl]: hasVariant(
            $state,
            "containerPadding",
            "right4Xl"
          ),
          [sty.containercontainerPadding_rightLg]: hasVariant(
            $state,
            "containerPadding",
            "rightLg"
          ),
          [sty.containercontainerPadding_rightMd]: hasVariant(
            $state,
            "containerPadding",
            "rightMd"
          ),
          [sty.containercontainerPadding_rightSm]: hasVariant(
            $state,
            "containerPadding",
            "rightSm"
          ),
          [sty.containercontainerPadding_rightXl]: hasVariant(
            $state,
            "containerPadding",
            "rightXl"
          ),
          [sty.containercontainerPadding_rightXs]: hasVariant(
            $state,
            "containerPadding",
            "rightXs"
          ),
          [sty.containercontainerPadding_top2Xl]: hasVariant(
            $state,
            "containerPadding",
            "top2Xl"
          ),
          [sty.containercontainerPadding_top2Xs]: hasVariant(
            $state,
            "containerPadding",
            "top2Xs"
          ),
          [sty.containercontainerPadding_top3Xl]: hasVariant(
            $state,
            "containerPadding",
            "top3Xl"
          ),
          [sty.containercontainerPadding_top3Xs]: hasVariant(
            $state,
            "containerPadding",
            "top3Xs"
          ),
          [sty.containercontainerPadding_top4Xl]: hasVariant(
            $state,
            "containerPadding",
            "top4Xl"
          ),
          [sty.containercontainerPadding_topLg]: hasVariant(
            $state,
            "containerPadding",
            "topLg"
          ),
          [sty.containercontainerPadding_topMd]: hasVariant(
            $state,
            "containerPadding",
            "topMd"
          ),
          [sty.containercontainerPadding_topSm]: hasVariant(
            $state,
            "containerPadding",
            "topSm"
          ),
          [sty.containercontainerPadding_topXl]: hasVariant(
            $state,
            "containerPadding",
            "topXl"
          ),
          [sty.containercontainerPadding_topXs]: hasVariant(
            $state,
            "containerPadding",
            "topXs"
          ),
          [sty.containercontentGap__2Xl]: hasVariant(
            $state,
            "contentGap",
            "_2Xl"
          ),
          [sty.containercontentGap__3Xl]: hasVariant(
            $state,
            "contentGap",
            "_3Xl"
          ),
          [sty.containercontentGap__4Xl]: hasVariant(
            $state,
            "contentGap",
            "_4Xl"
          ),
          [sty.containercontentGap_lg]: hasVariant($state, "contentGap", "lg"),
          [sty.containercontentGap_md]: hasVariant($state, "contentGap", "md"),
          [sty.containercontentGap_sm]: hasVariant($state, "contentGap", "sm"),
          [sty.containercontentGap_xl]: hasVariant($state, "contentGap", "xl"),
          [sty.containercontentGap_xs]: hasVariant($state, "contentGap", "xs"),
          [sty.containercontentPadding_right4Xl]: hasVariant(
            $state,
            "contentPadding",
            "right4Xl"
          ),
          [sty.containerlayer01_backgroundBold]: hasVariant(
            $state,
            "layer01",
            "backgroundBold"
          ),
          [sty.containerlayer01_backgroundSubtle]: hasVariant(
            $state,
            "layer01",
            "backgroundSubtle"
          ),
          [sty.containerlayer01_backgroundUniversal]: hasVariant(
            $state,
            "layer01",
            "backgroundUniversal"
          ),
          [sty.containerlayer02_backgroundBold]: hasVariant(
            $state,
            "layer02",
            "backgroundBold"
          ),
          [sty.containerlayer02_backgroundSubtle]: hasVariant(
            $state,
            "layer02",
            "backgroundSubtle"
          ),
          [sty.containerlayer02_backgroundUniversal]: hasVariant(
            $state,
            "layer02",
            "backgroundUniversal"
          ),
          [sty.containerlayer03_backgroundBold]: hasVariant(
            $state,
            "layer03",
            "backgroundBold"
          ),
          [sty.containerlayer03_backgroundSubtle]: hasVariant(
            $state,
            "layer03",
            "backgroundSubtle"
          ),
          [sty.containerlayer03_backgroundUniversal]: hasVariant(
            $state,
            "layer03",
            "backgroundUniversal"
          ),
          [sty.containerradius_extraLarge]: hasVariant(
            $state,
            "radius",
            "extraLarge"
          ),
          [sty.containerradius_large]: hasVariant($state, "radius", "large"),
          [sty.containerradius_medium]: hasVariant($state, "radius", "medium"),
          [sty.containerradius_none]: hasVariant($state, "radius", "none"),
          [sty.containerradius_small]: hasVariant($state, "radius", "small"),
          [sty.containershadow_lg]: hasVariant($state, "shadow", "lg"),
          [sty.containershadow_md]: hasVariant($state, "shadow", "md"),
          [sty.containershadow_sm]: hasVariant($state, "shadow", "sm"),
          [sty.containershadow_xl]: hasVariant($state, "shadow", "xl"),
          [sty.containershadow_xs]: hasVariant($state, "shadow", "xs"),
          [sty.containershadow_xxl]: hasVariant($state, "shadow", "xxl")
        }
      )}
    >
      <div
        data-plasmic-name={"overlay"}
        data-plasmic-override={overrides.overlay}
        className={classNames(projectcss.all, sty.overlay, {
          [sty.overlaybackgroundChanges_bright]: hasVariant(
            $state,
            "backgroundChanges",
            "bright"
          ),
          [sty.overlaybackgroundChanges_brighter]: hasVariant(
            $state,
            "backgroundChanges",
            "brighter"
          ),
          [sty.overlaybackgroundChanges_brightest]: hasVariant(
            $state,
            "backgroundChanges",
            "brightest"
          ),
          [sty.overlaybackgroundChanges_contrast]: hasVariant(
            $state,
            "backgroundChanges",
            "contrast"
          ),
          [sty.overlaybackgroundChanges_contraster]: hasVariant(
            $state,
            "backgroundChanges",
            "contraster"
          ),
          [sty.overlaybackgroundChanges_contrastest]: hasVariant(
            $state,
            "backgroundChanges",
            "contrastest"
          ),
          [sty.overlayborderColor_mainDisabled]: hasVariant(
            $state,
            "borderColor",
            "mainDisabled"
          ),
          [sty.overlaycontainerLayout_flipLayout]: hasVariant(
            $state,
            "containerLayout",
            "flipLayout"
          ),
          [sty.overlaycontentGap__4Xl]: hasVariant(
            $state,
            "contentGap",
            "_4Xl"
          ),
          [sty.overlaycontentPadding_all3Xs]: hasVariant(
            $state,
            "contentPadding",
            "all3Xs"
          ),
          [sty.overlayincludeIcon]: hasVariant(
            $state,
            "includeIcon",
            "includeIcon"
          ),
          [sty.overlayoverlayLayout_flipLayout]: hasVariant(
            $state,
            "overlayLayout",
            "flipLayout"
          ),
          [sty.overlayoverlayLayout_heightHug]: hasVariant(
            $state,
            "overlayLayout",
            "heightHug"
          ),
          [sty.overlayoverlayLayout_heightStretch]: hasVariant(
            $state,
            "overlayLayout",
            "heightStretch"
          ),
          [sty.overlayoverlayLayout_horizontalBaseline]: hasVariant(
            $state,
            "overlayLayout",
            "horizontalBaseline"
          ),
          [sty.overlayoverlayLayout_horizontalCenter]: hasVariant(
            $state,
            "overlayLayout",
            "horizontalCenter"
          ),
          [sty.overlayoverlayLayout_horizontalLeft]: hasVariant(
            $state,
            "overlayLayout",
            "horizontalLeft"
          ),
          [sty.overlayoverlayLayout_horizontalRight]: hasVariant(
            $state,
            "overlayLayout",
            "horizontalRight"
          ),
          [sty.overlayoverlayLayout_horizontalStretch]: hasVariant(
            $state,
            "overlayLayout",
            "horizontalStretch"
          ),
          [sty.overlayoverlayLayout_verticalAround]: hasVariant(
            $state,
            "overlayLayout",
            "verticalAround"
          ),
          [sty.overlayoverlayLayout_verticalBetween]: hasVariant(
            $state,
            "overlayLayout",
            "verticalBetween"
          ),
          [sty.overlayoverlayLayout_verticalBottom]: hasVariant(
            $state,
            "overlayLayout",
            "verticalBottom"
          ),
          [sty.overlayoverlayLayout_verticalCenter]: hasVariant(
            $state,
            "overlayLayout",
            "verticalCenter"
          ),
          [sty.overlayoverlayLayout_verticalEvenly]: hasVariant(
            $state,
            "overlayLayout",
            "verticalEvenly"
          ),
          [sty.overlayoverlayLayout_verticalTop]: hasVariant(
            $state,
            "overlayLayout",
            "verticalTop"
          ),
          [sty.overlayoverlayLayout_widthHug]: hasVariant(
            $state,
            "overlayLayout",
            "widthHug"
          ),
          [sty.overlayoverlayLayout_widthStretch]: hasVariant(
            $state,
            "overlayLayout",
            "widthStretch"
          ),
          [sty.overlayoverlayPadding_all2Xl]: hasVariant(
            $state,
            "overlayPadding",
            "all2Xl"
          ),
          [sty.overlayoverlayPadding_all2Xs]: hasVariant(
            $state,
            "overlayPadding",
            "all2Xs"
          ),
          [sty.overlayoverlayPadding_all3Xl]: hasVariant(
            $state,
            "overlayPadding",
            "all3Xl"
          ),
          [sty.overlayoverlayPadding_all3Xs]: hasVariant(
            $state,
            "overlayPadding",
            "all3Xs"
          ),
          [sty.overlayoverlayPadding_all4Xl]: hasVariant(
            $state,
            "overlayPadding",
            "all4Xl"
          ),
          [sty.overlayoverlayPadding_allLg]: hasVariant(
            $state,
            "overlayPadding",
            "allLg"
          ),
          [sty.overlayoverlayPadding_allMd]: hasVariant(
            $state,
            "overlayPadding",
            "allMd"
          ),
          [sty.overlayoverlayPadding_allSm]: hasVariant(
            $state,
            "overlayPadding",
            "allSm"
          ),
          [sty.overlayoverlayPadding_allXl]: hasVariant(
            $state,
            "overlayPadding",
            "allXl"
          ),
          [sty.overlayoverlayPadding_allXs]: hasVariant(
            $state,
            "overlayPadding",
            "allXs"
          ),
          [sty.overlayoverlayPadding_bottom2Xl]: hasVariant(
            $state,
            "overlayPadding",
            "bottom2Xl"
          ),
          [sty.overlayoverlayPadding_bottom2Xs]: hasVariant(
            $state,
            "overlayPadding",
            "bottom2Xs"
          ),
          [sty.overlayoverlayPadding_bottom3Xl]: hasVariant(
            $state,
            "overlayPadding",
            "bottom3Xl"
          ),
          [sty.overlayoverlayPadding_bottom3Xs]: hasVariant(
            $state,
            "overlayPadding",
            "bottom3Xs"
          ),
          [sty.overlayoverlayPadding_bottom4Xl]: hasVariant(
            $state,
            "overlayPadding",
            "bottom4Xl"
          ),
          [sty.overlayoverlayPadding_bottomLg]: hasVariant(
            $state,
            "overlayPadding",
            "bottomLg"
          ),
          [sty.overlayoverlayPadding_bottomMd]: hasVariant(
            $state,
            "overlayPadding",
            "bottomMd"
          ),
          [sty.overlayoverlayPadding_bottomSm]: hasVariant(
            $state,
            "overlayPadding",
            "bottomSm"
          ),
          [sty.overlayoverlayPadding_bottomXl]: hasVariant(
            $state,
            "overlayPadding",
            "bottomXl"
          ),
          [sty.overlayoverlayPadding_bottomXs]: hasVariant(
            $state,
            "overlayPadding",
            "bottomXs"
          ),
          [sty.overlayoverlayPadding_left2Xl]: hasVariant(
            $state,
            "overlayPadding",
            "left2Xl"
          ),
          [sty.overlayoverlayPadding_left2Xs]: hasVariant(
            $state,
            "overlayPadding",
            "left2Xs"
          ),
          [sty.overlayoverlayPadding_left3Xl]: hasVariant(
            $state,
            "overlayPadding",
            "left3Xl"
          ),
          [sty.overlayoverlayPadding_left3Xs]: hasVariant(
            $state,
            "overlayPadding",
            "left3Xs"
          ),
          [sty.overlayoverlayPadding_left4Xl]: hasVariant(
            $state,
            "overlayPadding",
            "left4Xl"
          ),
          [sty.overlayoverlayPadding_leftLg]: hasVariant(
            $state,
            "overlayPadding",
            "leftLg"
          ),
          [sty.overlayoverlayPadding_leftMd]: hasVariant(
            $state,
            "overlayPadding",
            "leftMd"
          ),
          [sty.overlayoverlayPadding_leftSm]: hasVariant(
            $state,
            "overlayPadding",
            "leftSm"
          ),
          [sty.overlayoverlayPadding_leftXl]: hasVariant(
            $state,
            "overlayPadding",
            "leftXl"
          ),
          [sty.overlayoverlayPadding_leftXs]: hasVariant(
            $state,
            "overlayPadding",
            "leftXs"
          ),
          [sty.overlayoverlayPadding_right2Xl]: hasVariant(
            $state,
            "overlayPadding",
            "right2Xl"
          ),
          [sty.overlayoverlayPadding_right2Xs]: hasVariant(
            $state,
            "overlayPadding",
            "right2Xs"
          ),
          [sty.overlayoverlayPadding_right3Xl]: hasVariant(
            $state,
            "overlayPadding",
            "right3Xl"
          ),
          [sty.overlayoverlayPadding_right3Xs]: hasVariant(
            $state,
            "overlayPadding",
            "right3Xs"
          ),
          [sty.overlayoverlayPadding_right4Xl]: hasVariant(
            $state,
            "overlayPadding",
            "right4Xl"
          ),
          [sty.overlayoverlayPadding_rightLg]: hasVariant(
            $state,
            "overlayPadding",
            "rightLg"
          ),
          [sty.overlayoverlayPadding_rightMd]: hasVariant(
            $state,
            "overlayPadding",
            "rightMd"
          ),
          [sty.overlayoverlayPadding_rightSm]: hasVariant(
            $state,
            "overlayPadding",
            "rightSm"
          ),
          [sty.overlayoverlayPadding_rightXl]: hasVariant(
            $state,
            "overlayPadding",
            "rightXl"
          ),
          [sty.overlayoverlayPadding_rightXs]: hasVariant(
            $state,
            "overlayPadding",
            "rightXs"
          ),
          [sty.overlayoverlayPadding_top2Xl]: hasVariant(
            $state,
            "overlayPadding",
            "top2Xl"
          ),
          [sty.overlayoverlayPadding_top2Xs]: hasVariant(
            $state,
            "overlayPadding",
            "top2Xs"
          ),
          [sty.overlayoverlayPadding_top3Xl]: hasVariant(
            $state,
            "overlayPadding",
            "top3Xl"
          ),
          [sty.overlayoverlayPadding_top3Xs]: hasVariant(
            $state,
            "overlayPadding",
            "top3Xs"
          ),
          [sty.overlayoverlayPadding_top4Xl]: hasVariant(
            $state,
            "overlayPadding",
            "top4Xl"
          ),
          [sty.overlayoverlayPadding_topLg]: hasVariant(
            $state,
            "overlayPadding",
            "topLg"
          ),
          [sty.overlayoverlayPadding_topMd]: hasVariant(
            $state,
            "overlayPadding",
            "topMd"
          ),
          [sty.overlayoverlayPadding_topSm]: hasVariant(
            $state,
            "overlayPadding",
            "topSm"
          ),
          [sty.overlayoverlayPadding_topXl]: hasVariant(
            $state,
            "overlayPadding",
            "topXl"
          ),
          [sty.overlayoverlayPadding_topXs]: hasVariant(
            $state,
            "overlayPadding",
            "topXs"
          )
        })}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"content"}
          data-plasmic-override={overrides.content}
          hasGap={true}
          className={classNames(projectcss.all, sty.content, {
            [sty.contentcontainerPadding_all2Xl]: hasVariant(
              $state,
              "containerPadding",
              "all2Xl"
            ),
            [sty.contentcontainerPadding_all2Xs]: hasVariant(
              $state,
              "containerPadding",
              "all2Xs"
            ),
            [sty.contentcontainerPadding_all3Xl]: hasVariant(
              $state,
              "containerPadding",
              "all3Xl"
            ),
            [sty.contentcontainerPadding_all3Xs]: hasVariant(
              $state,
              "containerPadding",
              "all3Xs"
            ),
            [sty.contentcontainerPadding_all4Xl]: hasVariant(
              $state,
              "containerPadding",
              "all4Xl"
            ),
            [sty.contentcontainerPadding_allLg]: hasVariant(
              $state,
              "containerPadding",
              "allLg"
            ),
            [sty.contentcontainerPadding_allMd]: hasVariant(
              $state,
              "containerPadding",
              "allMd"
            ),
            [sty.contentcontainerPadding_allSm]: hasVariant(
              $state,
              "containerPadding",
              "allSm"
            ),
            [sty.contentcontainerPadding_allXl]: hasVariant(
              $state,
              "containerPadding",
              "allXl"
            ),
            [sty.contentcontainerPadding_allXs]: hasVariant(
              $state,
              "containerPadding",
              "allXs"
            ),
            [sty.contentcontainerPadding_bottom2Xl]: hasVariant(
              $state,
              "containerPadding",
              "bottom2Xl"
            ),
            [sty.contentcontainerPadding_bottom2Xs]: hasVariant(
              $state,
              "containerPadding",
              "bottom2Xs"
            ),
            [sty.contentcontainerPadding_bottom3Xl]: hasVariant(
              $state,
              "containerPadding",
              "bottom3Xl"
            ),
            [sty.contentcontainerPadding_bottom3Xs]: hasVariant(
              $state,
              "containerPadding",
              "bottom3Xs"
            ),
            [sty.contentcontainerPadding_bottom4Xl]: hasVariant(
              $state,
              "containerPadding",
              "bottom4Xl"
            ),
            [sty.contentcontainerPadding_bottomLg]: hasVariant(
              $state,
              "containerPadding",
              "bottomLg"
            ),
            [sty.contentcontainerPadding_bottomMd]: hasVariant(
              $state,
              "containerPadding",
              "bottomMd"
            ),
            [sty.contentcontainerPadding_bottomSm]: hasVariant(
              $state,
              "containerPadding",
              "bottomSm"
            ),
            [sty.contentcontainerPadding_bottomXl]: hasVariant(
              $state,
              "containerPadding",
              "bottomXl"
            ),
            [sty.contentcontainerPadding_bottomXs]: hasVariant(
              $state,
              "containerPadding",
              "bottomXs"
            ),
            [sty.contentcontainerPadding_left2Xs]: hasVariant(
              $state,
              "containerPadding",
              "left2Xs"
            ),
            [sty.contentcontainerPadding_left3Xs]: hasVariant(
              $state,
              "containerPadding",
              "left3Xs"
            ),
            [sty.contentcontainerPadding_top2Xl]: hasVariant(
              $state,
              "containerPadding",
              "top2Xl"
            ),
            [sty.contentcontainerPadding_top2Xs]: hasVariant(
              $state,
              "containerPadding",
              "top2Xs"
            ),
            [sty.contentcontainerPadding_top3Xl]: hasVariant(
              $state,
              "containerPadding",
              "top3Xl"
            ),
            [sty.contentcontainerPadding_top3Xs]: hasVariant(
              $state,
              "containerPadding",
              "top3Xs"
            ),
            [sty.contentcontainerPadding_top4Xl]: hasVariant(
              $state,
              "containerPadding",
              "top4Xl"
            ),
            [sty.contentcontainerPadding_topLg]: hasVariant(
              $state,
              "containerPadding",
              "topLg"
            ),
            [sty.contentcontainerPadding_topMd]: hasVariant(
              $state,
              "containerPadding",
              "topMd"
            ),
            [sty.contentcontainerPadding_topSm]: hasVariant(
              $state,
              "containerPadding",
              "topSm"
            ),
            [sty.contentcontainerPadding_topXl]: hasVariant(
              $state,
              "containerPadding",
              "topXl"
            ),
            [sty.contentcontainerPadding_topXs]: hasVariant(
              $state,
              "containerPadding",
              "topXs"
            ),
            [sty.contentcontentGap__2Xl]: hasVariant(
              $state,
              "contentGap",
              "_2Xl"
            ),
            [sty.contentcontentGap__3Xl]: hasVariant(
              $state,
              "contentGap",
              "_3Xl"
            ),
            [sty.contentcontentGap__4Xl]: hasVariant(
              $state,
              "contentGap",
              "_4Xl"
            ),
            [sty.contentcontentGap_lg]: hasVariant($state, "contentGap", "lg"),
            [sty.contentcontentGap_md]: hasVariant($state, "contentGap", "md"),
            [sty.contentcontentGap_sm]: hasVariant($state, "contentGap", "sm"),
            [sty.contentcontentGap_xl]: hasVariant($state, "contentGap", "xl"),
            [sty.contentcontentGap_xs]: hasVariant($state, "contentGap", "xs"),
            [sty.contentcontentLayout_flipLayout]: hasVariant(
              $state,
              "contentLayout",
              "flipLayout"
            ),
            [sty.contentcontentLayout_heightHug]: hasVariant(
              $state,
              "contentLayout",
              "heightHug"
            ),
            [sty.contentcontentLayout_heightStretch]: hasVariant(
              $state,
              "contentLayout",
              "heightStretch"
            ),
            [sty.contentcontentLayout_horizontalBase]: hasVariant(
              $state,
              "contentLayout",
              "horizontalBase"
            ),
            [sty.contentcontentLayout_horizontalCenter]: hasVariant(
              $state,
              "contentLayout",
              "horizontalCenter"
            ),
            [sty.contentcontentLayout_horizontalLeft]: hasVariant(
              $state,
              "contentLayout",
              "horizontalLeft"
            ),
            [sty.contentcontentLayout_horizontalRight]: hasVariant(
              $state,
              "contentLayout",
              "horizontalRight"
            ),
            [sty.contentcontentLayout_horizontalStretch]: hasVariant(
              $state,
              "contentLayout",
              "horizontalStretch"
            ),
            [sty.contentcontentLayout_verticalAround]: hasVariant(
              $state,
              "contentLayout",
              "verticalAround"
            ),
            [sty.contentcontentLayout_verticalBetween]: hasVariant(
              $state,
              "contentLayout",
              "verticalBetween"
            ),
            [sty.contentcontentLayout_verticalBottom]: hasVariant(
              $state,
              "contentLayout",
              "verticalBottom"
            ),
            [sty.contentcontentLayout_verticalCenter]: hasVariant(
              $state,
              "contentLayout",
              "verticalCenter"
            ),
            [sty.contentcontentLayout_verticalEvenly]: hasVariant(
              $state,
              "contentLayout",
              "verticalEvenly"
            ),
            [sty.contentcontentLayout_verticalTop]: hasVariant(
              $state,
              "contentLayout",
              "verticalTop"
            ),
            [sty.contentcontentLayout_widthHug]: hasVariant(
              $state,
              "contentLayout",
              "widthHug"
            ),
            [sty.contentcontentLayout_widthStretch]: hasVariant(
              $state,
              "contentLayout",
              "widthStretch"
            ),
            [sty.contentcontentPadding_all2Xl]: hasVariant(
              $state,
              "contentPadding",
              "all2Xl"
            ),
            [sty.contentcontentPadding_all2Xs]: hasVariant(
              $state,
              "contentPadding",
              "all2Xs"
            ),
            [sty.contentcontentPadding_all3Xl]: hasVariant(
              $state,
              "contentPadding",
              "all3Xl"
            ),
            [sty.contentcontentPadding_all3Xs]: hasVariant(
              $state,
              "contentPadding",
              "all3Xs"
            ),
            [sty.contentcontentPadding_all4Xl]: hasVariant(
              $state,
              "contentPadding",
              "all4Xl"
            ),
            [sty.contentcontentPadding_allLg]: hasVariant(
              $state,
              "contentPadding",
              "allLg"
            ),
            [sty.contentcontentPadding_allMd]: hasVariant(
              $state,
              "contentPadding",
              "allMd"
            ),
            [sty.contentcontentPadding_allSm]: hasVariant(
              $state,
              "contentPadding",
              "allSm"
            ),
            [sty.contentcontentPadding_allXl]: hasVariant(
              $state,
              "contentPadding",
              "allXl"
            ),
            [sty.contentcontentPadding_allXs]: hasVariant(
              $state,
              "contentPadding",
              "allXs"
            ),
            [sty.contentcontentPadding_bottom2Xl]: hasVariant(
              $state,
              "contentPadding",
              "bottom2Xl"
            ),
            [sty.contentcontentPadding_bottom2Xs]: hasVariant(
              $state,
              "contentPadding",
              "bottom2Xs"
            ),
            [sty.contentcontentPadding_bottom3Xl]: hasVariant(
              $state,
              "contentPadding",
              "bottom3Xl"
            ),
            [sty.contentcontentPadding_bottom3Xs]: hasVariant(
              $state,
              "contentPadding",
              "bottom3Xs"
            ),
            [sty.contentcontentPadding_bottom4Xl]: hasVariant(
              $state,
              "contentPadding",
              "bottom4Xl"
            ),
            [sty.contentcontentPadding_bottomLg]: hasVariant(
              $state,
              "contentPadding",
              "bottomLg"
            ),
            [sty.contentcontentPadding_bottomMd]: hasVariant(
              $state,
              "contentPadding",
              "bottomMd"
            ),
            [sty.contentcontentPadding_bottomSm]: hasVariant(
              $state,
              "contentPadding",
              "bottomSm"
            ),
            [sty.contentcontentPadding_bottomXl]: hasVariant(
              $state,
              "contentPadding",
              "bottomXl"
            ),
            [sty.contentcontentPadding_bottomXs]: hasVariant(
              $state,
              "contentPadding",
              "bottomXs"
            ),
            [sty.contentcontentPadding_left2Xl]: hasVariant(
              $state,
              "contentPadding",
              "left2Xl"
            ),
            [sty.contentcontentPadding_left2Xs]: hasVariant(
              $state,
              "contentPadding",
              "left2Xs"
            ),
            [sty.contentcontentPadding_left3Xl]: hasVariant(
              $state,
              "contentPadding",
              "left3Xl"
            ),
            [sty.contentcontentPadding_left3Xs]: hasVariant(
              $state,
              "contentPadding",
              "left3Xs"
            ),
            [sty.contentcontentPadding_left4Xl]: hasVariant(
              $state,
              "contentPadding",
              "left4Xl"
            ),
            [sty.contentcontentPadding_leftLg]: hasVariant(
              $state,
              "contentPadding",
              "leftLg"
            ),
            [sty.contentcontentPadding_leftMd]: hasVariant(
              $state,
              "contentPadding",
              "leftMd"
            ),
            [sty.contentcontentPadding_leftSm]: hasVariant(
              $state,
              "contentPadding",
              "leftSm"
            ),
            [sty.contentcontentPadding_leftXl]: hasVariant(
              $state,
              "contentPadding",
              "leftXl"
            ),
            [sty.contentcontentPadding_leftXs]: hasVariant(
              $state,
              "contentPadding",
              "leftXs"
            ),
            [sty.contentcontentPadding_right2Xl]: hasVariant(
              $state,
              "contentPadding",
              "right2Xl"
            ),
            [sty.contentcontentPadding_right2Xs]: hasVariant(
              $state,
              "contentPadding",
              "right2Xs"
            ),
            [sty.contentcontentPadding_right3Xl]: hasVariant(
              $state,
              "contentPadding",
              "right3Xl"
            ),
            [sty.contentcontentPadding_right3Xs]: hasVariant(
              $state,
              "contentPadding",
              "right3Xs"
            ),
            [sty.contentcontentPadding_right4Xl]: hasVariant(
              $state,
              "contentPadding",
              "right4Xl"
            ),
            [sty.contentcontentPadding_rightLg]: hasVariant(
              $state,
              "contentPadding",
              "rightLg"
            ),
            [sty.contentcontentPadding_rightMd]: hasVariant(
              $state,
              "contentPadding",
              "rightMd"
            ),
            [sty.contentcontentPadding_rightSm]: hasVariant(
              $state,
              "contentPadding",
              "rightSm"
            ),
            [sty.contentcontentPadding_rightXl]: hasVariant(
              $state,
              "contentPadding",
              "rightXl"
            ),
            [sty.contentcontentPadding_rightXs]: hasVariant(
              $state,
              "contentPadding",
              "rightXs"
            ),
            [sty.contentcontentPadding_top2Xl]: hasVariant(
              $state,
              "contentPadding",
              "top2Xl"
            ),
            [sty.contentcontentPadding_top2Xs]: hasVariant(
              $state,
              "contentPadding",
              "top2Xs"
            ),
            [sty.contentcontentPadding_top3Xl]: hasVariant(
              $state,
              "contentPadding",
              "top3Xl"
            ),
            [sty.contentcontentPadding_top3Xs]: hasVariant(
              $state,
              "contentPadding",
              "top3Xs"
            ),
            [sty.contentcontentPadding_top4Xl]: hasVariant(
              $state,
              "contentPadding",
              "top4Xl"
            ),
            [sty.contentcontentPadding_topLg]: hasVariant(
              $state,
              "contentPadding",
              "topLg"
            ),
            [sty.contentcontentPadding_topMd]: hasVariant(
              $state,
              "contentPadding",
              "topMd"
            ),
            [sty.contentcontentPadding_topSm]: hasVariant(
              $state,
              "contentPadding",
              "topSm"
            ),
            [sty.contentcontentPadding_topXl]: hasVariant(
              $state,
              "contentPadding",
              "topXl"
            ),
            [sty.contentcontentPadding_topXs]: hasVariant(
              $state,
              "contentPadding",
              "topXs"
            ),
            [sty.contentoverlayLayout_flipLayout]: hasVariant(
              $state,
              "overlayLayout",
              "flipLayout"
            ),
            [sty.contentoverlayLayout_horizontalBaseline]: hasVariant(
              $state,
              "overlayLayout",
              "horizontalBaseline"
            )
          })}
        >
          {renderPlasmicSlot({
            defaultContents: null,
            value: args.containerSlot
          })}
        </Stack__>
        <div
          data-plasmic-name={"image"}
          data-plasmic-override={overrides.image}
          className={classNames(projectcss.all, sty.image, {
            [sty.imageincludeIcon]: hasVariant(
              $state,
              "includeIcon",
              "includeIcon"
            ),
            [sty.imageincludeImage]: hasVariant(
              $state,
              "includeImage",
              "includeImage"
            ),
            [sty.imageoverlayLayout_flipLayout]: hasVariant(
              $state,
              "overlayLayout",
              "flipLayout"
            )
          })}
        >
          <PlasmicImg__
            data-plasmic-name={"img"}
            data-plasmic-override={overrides.img}
            alt={""}
            className={classNames(sty.img, {
              [sty.imgincludeIcon]: hasVariant(
                $state,
                "includeIcon",
                "includeIcon"
              )
            })}
            displayHeight={"100%"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"100%"}
            loading={"lazy"}
            src={
              hasVariant($state, "includeIcon", "includeIcon")
                ? (() => {
                    try {
                      return $props.imageUrl;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        </div>
        <div
          data-plasmic-name={"icon"}
          data-plasmic-override={overrides.icon}
          className={classNames(projectcss.all, sty.icon, {
            [sty.iconincludeIcon]: hasVariant(
              $state,
              "includeIcon",
              "includeIcon"
            ),
            [sty.iconoverlayLayout_flipLayout]: hasVariant(
              $state,
              "overlayLayout",
              "flipLayout"
            )
          })}
        >
          <svg
            data-plasmic-name={"svg"}
            data-plasmic-override={overrides.svg}
            className={classNames(projectcss.all, sty.svg)}
            role={"img"}
          />
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  container: ["container", "overlay", "content", "image", "img", "icon", "svg"],
  overlay: ["overlay", "content", "image", "img", "icon", "svg"],
  content: ["content"],
  image: ["image", "img"],
  img: ["img"],
  icon: ["icon", "svg"],
  svg: ["svg"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  container: "div";
  overlay: "div";
  content: "div";
  image: "div";
  img: typeof PlasmicImg__;
  icon: "div";
  svg: "svg";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicContainer__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicContainer__VariantsArgs;
    args?: PlasmicContainer__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicContainer__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicContainer__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContainer__ArgProps,
          internalVariantPropNames: PlasmicContainer__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContainer__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "container") {
    func.displayName = "PlasmicContainer";
  } else {
    func.displayName = `PlasmicContainer.${nodeName}`;
  }
  return func;
}

export const PlasmicContainer = Object.assign(
  // Top-level PlasmicContainer renders the root element
  makeNodeComponent("container"),
  {
    // Helper components rendering sub-elements
    overlay: makeNodeComponent("overlay"),
    content: makeNodeComponent("content"),
    image: makeNodeComponent("image"),
    img: makeNodeComponent("img"),
    icon: makeNodeComponent("icon"),
    svg: makeNodeComponent("svg"),

    // Metadata about props expected for PlasmicContainer
    internalVariantProps: PlasmicContainer__VariantProps,
    internalArgProps: PlasmicContainer__ArgProps
  }
);

export default PlasmicContainer;
/* prettier-ignore-end */

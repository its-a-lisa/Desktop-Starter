// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: xoA7omHX1aucC3LFX3rgWp
// Component: e5VcxpYiruKW

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import HeroSectionHero from "../../HeroSectionHero"; // plasmic-import: oRIHpDY8-rTC/component
import SocialProofSectionSocialProof from "../../SocialProofSectionSocialProof"; // plasmic-import: d5TK5QUCA6Bk/component
import ValuesSectionValues from "../../ValuesSectionValues"; // plasmic-import: NSHccciyxRK_/component
import AboutSectionAbout from "../../AboutSectionAbout"; // plasmic-import: ljjoE6e4rGJl/component
import MissionSectionMission from "../../MissionSectionMission"; // plasmic-import: M_deSSxLuHjN/component
import TestimonialSectionTestimonials from "../../TestimonialSectionTestimonials"; // plasmic-import: TPNiGfUjvdq1/component
import PricingSectionPricing from "../../PricingSectionPricing"; // plasmic-import: HSbP2SYmQzkZ/component
import FeaturesSectionFeatures from "../../FeaturesSectionFeatures"; // plasmic-import: xL3c_B4MYbFJ/component
import CallToActionSectionCallToAction from "../../CallToActionSectionCallToAction"; // plasmic-import: d2D5FO4eIVp0/component
import FooterSectionFooter from "../../FooterSectionFooter"; // plasmic-import: VS9THT0wvN1q/component

import { ModeValue, useMode } from "../core/PlasmicGlobalVariant__Mode"; // plasmic-import: yBTVTgAz2Co9/globalVariant
import { useScreenVariants as useScreenVariantsohEUf6Jd0EV8 } from "../core/PlasmicGlobalVariant__Screen"; // plasmic-import: OhEUf6Jd0eV8/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_core_css from "../core/plasmic.module.css"; // plasmic-import: 3BHMWCYAenCmWb8ThbnzeF/projectcss
import plasmic_semantic_css from "../semantic/plasmic.module.css"; // plasmic-import: dNqcW7FYVqnkjtbdVGjyS8/projectcss
import plasmic_desktop_ui_theme_css from "../desktop_ui_theme/plasmic.module.css"; // plasmic-import: 6eqm1KNiFrAWEs21Xh4t1D/projectcss
import plasmic_advance_card_css from "../advance_card/plasmic.module.css"; // plasmic-import: 71RGmKESGHwX1FQiVTH6Ch/projectcss
import plasmic_form_input_css from "../form_input/plasmic.module.css"; // plasmic-import: teUZ7d8BEHskoXuvEf1pBj/projectcss
import plasmic_icon_css from "../icon/plasmic.module.css"; // plasmic-import: nVTL6BvP7Knk1RSNkBbJCm/projectcss
import plasmic_statistic_css from "../statistic/plasmic.module.css"; // plasmic-import: tq1m84LuCppLaXTJBWMK12/projectcss
import plasmic_avatar_css from "../avatar/plasmic.module.css"; // plasmic-import: wjwfXMtbnYisAPU4bK5cC5/projectcss
import plasmic_button_css from "../button/plasmic.module.css"; // plasmic-import: 4JFyEcvXaxQ6TZ3SJQYzp6/projectcss
import plasmic_image_css from "../image/plasmic.module.css"; // plasmic-import: d4FLWyib3U2TEbmJ38D5i3/projectcss
import plasmic_container_css from "../container/plasmic.module.css"; // plasmic-import: d9PrY1SRs2wAiwFXTkwPXt/projectcss
import plasmic_switch_css from "../switch/plasmic.module.css"; // plasmic-import: i4n9AbVD4xq7VvHzvrVDh9/projectcss
import plasmic_badge_css from "../badge/plasmic.module.css"; // plasmic-import: 6PoNur73nfoJqbzNtkNpAX/projectcss
import plasmic_menu_item_css from "../menu_item/plasmic.module.css"; // plasmic-import: 2ejMdvJDoJWjwd6DCNSCHJ/projectcss
import plasmic_separator_css from "../separator/plasmic.module.css"; // plasmic-import: mGt6E9beS9xM1LmsApto9L/projectcss
import plasmic_form_checkbox_css from "../form_checkbox/plasmic.module.css"; // plasmic-import: bEVQSMSYHutfoPgsCgDaki/projectcss
import plasmic_form_select_css from "../form_select/plasmic.module.css"; // plasmic-import: ivrmEdvdUKbShkHq3Wnmy4/projectcss
import plasmic_list_item_css from "../list_item/plasmic.module.css"; // plasmic-import: fKizj5juSSuZK31zh3BBJE/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: xoA7omHX1aucC3LFX3rgWp/projectcss
import sty from "./PlasmicStarter.module.css"; // plasmic-import: e5VcxpYiruKW/css

createPlasmicElementProxy;

export type PlasmicStarter__VariantMembers = {};
export type PlasmicStarter__VariantsArgs = {};
type VariantPropType = keyof PlasmicStarter__VariantsArgs;
export const PlasmicStarter__VariantProps = new Array<VariantPropType>();

export type PlasmicStarter__ArgsType = {};
type ArgPropType = keyof PlasmicStarter__ArgsType;
export const PlasmicStarter__ArgProps = new Array<ArgPropType>();

export type PlasmicStarter__OverridesType = {
  root?: Flex__<"div">;
  heroSectionHero?: Flex__<typeof HeroSectionHero>;
  socialProofSectionSocialProof?: Flex__<typeof SocialProofSectionSocialProof>;
  valuesSectionValues?: Flex__<typeof ValuesSectionValues>;
  aboutSectionAbout?: Flex__<typeof AboutSectionAbout>;
  missionSectionMission?: Flex__<typeof MissionSectionMission>;
  testimonialSectionTestimonials?: Flex__<
    typeof TestimonialSectionTestimonials
  >;
  pricingSectionPricing?: Flex__<typeof PricingSectionPricing>;
  featuresSectionFeatures?: Flex__<typeof FeaturesSectionFeatures>;
  callToActionSectionCallToAction?: Flex__<
    typeof CallToActionSectionCallToAction
  >;
  footerSectionFooter?: Flex__<typeof FooterSectionFooter>;
};

export interface DefaultStarterProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicStarter__RenderFunc(props: {
  variants: PlasmicStarter__VariantsArgs;
  args: PlasmicStarter__ArgsType;
  overrides: PlasmicStarter__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    mode: useMode(),
    screen: useScreenVariantsohEUf6Jd0EV8()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_core_css.plasmic_tokens,
        plasmic_semantic_css.plasmic_tokens,
        plasmic_desktop_ui_theme_css.plasmic_tokens,
        plasmic_advance_card_css.plasmic_tokens,
        plasmic_form_input_css.plasmic_tokens,
        plasmic_icon_css.plasmic_tokens,
        plasmic_statistic_css.plasmic_tokens,
        plasmic_avatar_css.plasmic_tokens,
        plasmic_button_css.plasmic_tokens,
        plasmic_image_css.plasmic_tokens,
        plasmic_container_css.plasmic_tokens,
        plasmic_switch_css.plasmic_tokens,
        plasmic_badge_css.plasmic_tokens,
        plasmic_menu_item_css.plasmic_tokens,
        plasmic_separator_css.plasmic_tokens,
        plasmic_form_checkbox_css.plasmic_tokens,
        plasmic_form_select_css.plasmic_tokens,
        plasmic_list_item_css.plasmic_tokens,
        sty.root,
        {
          [plasmic_core_css.global_mode_darkGrayscale]: hasVariant(
            globalVariants,
            "mode",
            "darkGrayscale"
          ),
          [plasmic_core_css.global_mode_dark]: hasVariant(
            globalVariants,
            "mode",
            "dark"
          ),
          [plasmic_core_css.global_mode_grayscale]: hasVariant(
            globalVariants,
            "mode",
            "grayscale"
          ),
          [sty.rootglobal_mode_dark]: hasVariant(globalVariants, "mode", "dark")
        }
      )}
    >
      <HeroSectionHero
        data-plasmic-name={"heroSectionHero"}
        data-plasmic-override={overrides.heroSectionHero}
        className={classNames("__wab_instance", sty.heroSectionHero)}
      />

      <SocialProofSectionSocialProof
        data-plasmic-name={"socialProofSectionSocialProof"}
        data-plasmic-override={overrides.socialProofSectionSocialProof}
        className={classNames(
          "__wab_instance",
          sty.socialProofSectionSocialProof
        )}
      />

      <ValuesSectionValues
        data-plasmic-name={"valuesSectionValues"}
        data-plasmic-override={overrides.valuesSectionValues}
        className={classNames("__wab_instance", sty.valuesSectionValues)}
      />

      <AboutSectionAbout
        data-plasmic-name={"aboutSectionAbout"}
        data-plasmic-override={overrides.aboutSectionAbout}
        className={classNames("__wab_instance", sty.aboutSectionAbout, {
          [sty.aboutSectionAboutglobal_mode_dark]: hasVariant(
            globalVariants,
            "mode",
            "dark"
          )
        })}
      />

      <MissionSectionMission
        data-plasmic-name={"missionSectionMission"}
        data-plasmic-override={overrides.missionSectionMission}
        className={classNames("__wab_instance", sty.missionSectionMission)}
      />

      <TestimonialSectionTestimonials
        data-plasmic-name={"testimonialSectionTestimonials"}
        data-plasmic-override={overrides.testimonialSectionTestimonials}
        className={classNames(
          "__wab_instance",
          sty.testimonialSectionTestimonials
        )}
      />

      <PricingSectionPricing
        data-plasmic-name={"pricingSectionPricing"}
        data-plasmic-override={overrides.pricingSectionPricing}
        className={classNames("__wab_instance", sty.pricingSectionPricing)}
      />

      <FeaturesSectionFeatures
        data-plasmic-name={"featuresSectionFeatures"}
        data-plasmic-override={overrides.featuresSectionFeatures}
        className={classNames("__wab_instance", sty.featuresSectionFeatures)}
      />

      <CallToActionSectionCallToAction
        data-plasmic-name={"callToActionSectionCallToAction"}
        data-plasmic-override={overrides.callToActionSectionCallToAction}
        className={classNames(
          "__wab_instance",
          sty.callToActionSectionCallToAction
        )}
      />

      <FooterSectionFooter
        data-plasmic-name={"footerSectionFooter"}
        data-plasmic-override={overrides.footerSectionFooter}
        className={classNames("__wab_instance", sty.footerSectionFooter)}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSectionHero",
    "socialProofSectionSocialProof",
    "valuesSectionValues",
    "aboutSectionAbout",
    "missionSectionMission",
    "testimonialSectionTestimonials",
    "pricingSectionPricing",
    "featuresSectionFeatures",
    "callToActionSectionCallToAction",
    "footerSectionFooter"
  ],
  heroSectionHero: ["heroSectionHero"],
  socialProofSectionSocialProof: ["socialProofSectionSocialProof"],
  valuesSectionValues: ["valuesSectionValues"],
  aboutSectionAbout: ["aboutSectionAbout"],
  missionSectionMission: ["missionSectionMission"],
  testimonialSectionTestimonials: ["testimonialSectionTestimonials"],
  pricingSectionPricing: ["pricingSectionPricing"],
  featuresSectionFeatures: ["featuresSectionFeatures"],
  callToActionSectionCallToAction: ["callToActionSectionCallToAction"],
  footerSectionFooter: ["footerSectionFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSectionHero: typeof HeroSectionHero;
  socialProofSectionSocialProof: typeof SocialProofSectionSocialProof;
  valuesSectionValues: typeof ValuesSectionValues;
  aboutSectionAbout: typeof AboutSectionAbout;
  missionSectionMission: typeof MissionSectionMission;
  testimonialSectionTestimonials: typeof TestimonialSectionTestimonials;
  pricingSectionPricing: typeof PricingSectionPricing;
  featuresSectionFeatures: typeof FeaturesSectionFeatures;
  callToActionSectionCallToAction: typeof CallToActionSectionCallToAction;
  footerSectionFooter: typeof FooterSectionFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStarter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStarter__VariantsArgs;
    args?: PlasmicStarter__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStarter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicStarter__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicStarter__ArgProps,
          internalVariantPropNames: PlasmicStarter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicStarter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStarter";
  } else {
    func.displayName = `PlasmicStarter.${nodeName}`;
  }
  return func;
}

export const PlasmicStarter = Object.assign(
  // Top-level PlasmicStarter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    heroSectionHero: makeNodeComponent("heroSectionHero"),
    socialProofSectionSocialProof: makeNodeComponent(
      "socialProofSectionSocialProof"
    ),
    valuesSectionValues: makeNodeComponent("valuesSectionValues"),
    aboutSectionAbout: makeNodeComponent("aboutSectionAbout"),
    missionSectionMission: makeNodeComponent("missionSectionMission"),
    testimonialSectionTestimonials: makeNodeComponent(
      "testimonialSectionTestimonials"
    ),
    pricingSectionPricing: makeNodeComponent("pricingSectionPricing"),
    featuresSectionFeatures: makeNodeComponent("featuresSectionFeatures"),
    callToActionSectionCallToAction: makeNodeComponent(
      "callToActionSectionCallToAction"
    ),
    footerSectionFooter: makeNodeComponent("footerSectionFooter"),

    // Metadata about props expected for PlasmicStarter
    internalVariantProps: PlasmicStarter__VariantProps,
    internalArgProps: PlasmicStarter__ArgProps
  }
);

export default PlasmicStarter;
/* prettier-ignore-end */
